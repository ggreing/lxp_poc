"""Persona templates, scenario map and utilities."""

import random
from typing import Dict, List

AGE_GROUPS = [
    "10대", "10대", "20대", "20대", "20대", "30대", "30대", "40대", "50대", "60대 이상"
]
PERSONALITIES = [
    "외향적이고 충동적이지만 소심함도 있음 | 말투: '이거 요즘 진짜 핫하죠? 근데 진짜 나한테 잘 맞을까요...?' | 구매 행동: 트렌드와 SNS 후기를 맹신하지만, 실제 결제 직전엔 한 번 더 고민하며 망설임.",
    "신중·합리적·예민한 성향 | 말투: '다른 데랑 비교했을 때 진짜 여기 조건이 제일 나은 거 맞나요?' | 구매 행동: 조건·가격 차이에 매우 민감, 사소한 불이익에도 곧장 불만을 제기.",
    "계획적이고 가족 중심, 걱정 많은 성격 | 말투: '이 제품이 우리 애한테도 안전하겠죠...? 혹시 부작용 같은 거 없나요?' | 구매 행동: 꼼꼼하게 질문하며 제품의 안전성, 후기, 보증 조건을 모두 따짐.",
    "자신감 넘치고 브랜드 충성도가 강하며 장난스러움 | 말투: '아, 이런 건 그냥 나한테 잘 어울릴 것 같아서~ 농담 농담!' | 구매 행동: 한 번 꽂히면 가격 크게 신경 안 씀. 하지만 직원이 딱딱하면 장난으로 분위기 환기.",
    "보수적·위험 회피·겁 많은 성격 | 말투: '혹시 고장 많이 나는 건 아니죠? 저는 좀 겁이 많아서...' | 구매 행동: 신제품·첨단 기능을 경계, 남들이 많이 쓴 것만 신뢰.",
    "감성적이고 열정적인 유형 | 말투: '와, 이 브랜드 스토리 듣는데 왜 이렇게 설레죠?' | 구매 행동: 광고나 스토리에 감정이입해서 즉흥적으로 지갑을 염.",
    "호기심 많고 대담·직설적임 | 말투: '그래서 이거, 진짜 기능 쓸만한가요? 솔직히 말해봐요.' | 구매 행동: 궁금한 건 전부 직접 묻고, 만족스럽지 않으면 바로 표정에 드러냄.",
    "사회적 책임 의식이 강하고 털털함 | 말투: '환경 생각하면 이게 낫겠죠? 뭐, 가격은 좀 비싸도 괜찮아요.' | 구매 행동: 친환경, 사회적 가치 어필 제품에 선뜻 돈을 씀. 세세한 건 잘 따지지 않음.",
    "호감형·친근·장난기 많은 스타일 | 말투: '사장님~ 혹시 서비스 좀 더 해주시면 저 바로 살 수도 있는데?' | 구매 행동: 농담 섞어 흥정, 친해지면 충동적으로 구매도 함.",
    "경쟁적·완벽주의·불만 많음 | 말투: '저번엔 더 싸게 해준다던데, 이 조건 진짜 최선이에요?' | 구매 행동: 조건 비교 집착, 만족 못하면 계속 딴지. 클로징도 쉽지 않음.",
    "소심하고 결정 장애 있음 | 말투: '저, 아직 잘 모르겠어요... 추천해주시면 더 믿고 살 수 있을 것 같은데...' | 구매 행동: 결제 직전까지 망설임, 남의 추천에 기대려는 경향.",
    "장난스럽고 유머러스 | 말투: '이거 사면 저한테 복이 좀 올까요? 농담이에요, 근데 진짜면 좋겠다~' | 구매 행동: 유쾌하게 웃으며 깎아달라고 하거나, 사소한 혜택도 집요하게 물어봄.",
    "냉정하고 비즈니스적 | 말투: '좋은 얘기 그만하고, 실제 조건만 정확히 말해 주세요.' | 구매 행동: 불필요한 감정적 호응 없이, 정보/가성비/실리만 따짐.",
    "예민하고 까칠함 | 말투: '서비스 별로면 그냥 안 살 수도 있는데요?' | 구매 행동: 작은 실수에도 강하게 불만 표출, 클레임 걸 확률 높음.",
    "낙천적이고 긍정적 | 말투: '괜찮아요~ 실수해도 어차피 저 잘 쓰니까!' | 구매 행동: 가격/조건보다 경험을 중시, 쉽게 웃으며 대화."
]
GENDERS = [
    "남성", "여성", "젠더리스", "남성", "여성", "젠더리스", "남성", "여성", "남성", "여성"
]
TECH_LEVELS = [
    "초보", "중급", "고급", "전문가", "초보", "중급", "고급", "전문가", "초보", "중급"
]
GOALS = [
    "삼성 갤럭시 최신 스마트폰을 가장 먼저 사용해보고 싶어서",
    "삼성 QLED TV로 영화관 같은 집안 극장을 만들고 싶어서",
    "비스포크 냉장고로 주방 분위기와 실용성을 동시에 업그레이드",
    "스마트싱스 연동으로 집 전체를 스마트홈으로 바꾸기 위해",
    "자녀의 온라인 수업에 최적화된 갤럭시 탭 구매",
    "고음질 음악 감상용 삼성 무선 이어폰 체험",
    "에너지 절약형 그랑데 세탁기로 전기료와 효율 모두 챙기기 위해",
    "AI 기능 탑재 삼성 공기청정기로 가족 건강 관리",
    "삼성 노트북으로 재택근무 효율 극대화",
    "실시간 헬스 데이터 관리를 위해 갤럭시 워치 구입",
    "반려동물 집을 모니터링할 스마트캠 설치",
    "음식물 쓰레기 처리가 편리한 삼성 음식물처리기 필요",
    "주방 공간을 절약할 빌트인 오븐 구입",
    "삼성 비스포크 무풍에어컨으로 쾌적한 여름 대비",
    "삼성 청소로봇으로 매일 편하게 집 청소",
    "AI 음성 비서 탑재 TV로 생활 편리성 향상",
    "삼성 커브드 모니터로 몰입감 높은 게임 환경 구축",
    "업무/강의용 삼성 고해상도 웹캠 필요",
    "갤럭시 워치로 건강 관리 및 알림 기능 활용",
    "갤럭시북 프로로 휴대성과 업무 생산성 모두 잡기",
    "스마트싱스 연동 세탁기/건조기 자동화 체험",
    "친구/가족과의 화상통화를 위한 삼성 태블릿 구입",
    "주방의 스타일을 높일 맞춤형 비스포크 냉장고 구매",
    "삼성 스마트 도어락으로 집 보안 강화",
    "어르신을 위한 간편한 삼성 스마트폰 마련",
    "삼성 스마트 빔프로젝터로 캠핑장에서도 영화 감상",
    "노이즈 캔슬링 삼성 이어버즈로 집중력 향상",
    "아이들 방에 놀이용 스마트TV 설치",
    "외출 시 집안 상태 확인 가능한 삼성 CCTV 도입",
    "삼성 그랑데 건조기로 미세먼지 걱정 없는 빨래",
    "고성능 게이밍 모니터로 PC방 부럽지 않은 게임 환경",
    "비스포크 인덕션으로 주방을 효율적이고 세련되게",
    "자동 업데이트·스마트 컨트롤 가능한 냉장고가 필요해서",
    "고객 응대에 최적화된 삼성 태블릿 매장 도입",
    "삼성 냉온정수기로 건강한 음수 습관 만들기",
    "프리미엄 사운드바로 TV 시청 경험 향상",
    "삼성 무선 프린터로 가정/소규모 사무실 업무 효율화",
    "삼성 올인원 에어드레서로 옷 관리 혁신",
    "삼성 디지털플라자 체험을 위한 방문 기념 제품 구입"
]
TYPES = [
    "Impulsive Spender", "Price-Value Seeker", "Balanced Optimist", "Status-Driven Shopper",
    "Secure Traditionalist", "Emotional Storyteller", "Tech Innovator", "Ethical Consumer",
    "Social Connector", "Competitive Achiever"
]
USAGES = [
    "업무 효율화", "가족 사용", "엔터테인먼트", "고급 경험", "자동화",
    "감성 충족", "기술 탐구", "환경 보호", "소통 강화", "성과 향상"
]
SCENARIOS = {
    "intro_meeting": "첫 매장 방문",
    "handle_objection": "반대 의견 처리",
    "closing_deal": "계약 체결",
    "product_explanation": "제품 설명 요청",
    "compare_with_others": "경쟁 브랜드와 비교",
    "request_discount": "할인 및 조건 협상",
    "follow_up_visit": "재방문 고객 응대",
    "online_inquiry": "온라인 문의 후 오프라인 방문",
    "vip_experience": "VIP 고객 전용 안내",
    "after_service": "구매 후 서비스 문의"
}

PERSONAS: List[Dict] = []  # 등록 페르소나 메모리 리스트

__all__ = [
    "random_persona", "SCENARIOS", "AGE_GROUPS", "PERSONALITIES", "GENDERS", "TECH_LEVELS",
    "GOALS", "TYPES", "USAGES", "PERSONAS"
]

def random_persona() -> Dict:
    idx = random.randint(0,9)
    return {
        "age_group": AGE_GROUPS[random.randint(0, len(AGE_GROUPS)-1)],
        "personality": PERSONALITIES[random.randint(0, len(PERSONALITIES)-1)],
        "gender": GENDERS[random.randint(0, len(GENDERS)-1)],
        "tech": TECH_LEVELS[random.randint(0, len(TECH_LEVELS)-1)],
        "goal": GOALS[random.randint(0,len(GOALS)-1)],
        "type": TYPES[random.randint(0,len(TYPES)-1)],
        "usage": USAGES[random.randint(0,len(USAGES)-1)],
    }


def get_all_presets() -> list:
    """랜덤 예시용 샘플들을 모두 리스트로 반환 (id 포함)"""
    result = []
    for i in range(len(AGE_GROUPS)):
        result.append({
            "id": f"preset-{i}",
            "age_group": AGE_GROUPS[i],
            "personality": PERSONALITIES[i % len(PERSONALITIES)],
            "gender": GENDERS[i % len(GENDERS)],
            "tech": TECH_LEVELS[i % len(TECH_LEVELS)],
            "goal": GOALS[i % len(GOALS)],
            "type": TYPES[i % len(TYPES)],
            "usage": USAGES[i % len(USAGES)],
        })
    return result

PRESET_PERSONAS = get_all_presets()